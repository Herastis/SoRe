{
  "openapi": "3.0.0",
  "info": {
    "title": "Social Recommender API",
    "description": "General API for SoRe platform",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://virtserver.swaggerhub.com/STOLERIUMIHAIIULIAN/SoReAPI/1.0.0",
      "description": "SwaggerHub API Auto Mocking"
    },
    {
      "url": "http://localhost:8080",
      "description": "Local server"
    }
  ],
  "paths": {
    "/api/auth/register": {
      "post": {
        "summary": "User Registration",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/auth_register_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User successfully registered"
          },
          "400": {
            "description": "Bad request, invalid input data"
          }
        }
      }
    },
    "/api/auth/preferences": {
      "post": {
        "summary": "Optionally add some interests",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Preferences updated successfully"
          },
          "400": {
            "description": "Bad request, invalid input data"
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "summary": "User Login",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/auth_login_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User successfully logged in"
          },
          "401": {
            "description": "Unauthorized, invalid credentials"
          }
        }
      }
    },
    "/api/profile": {
      "get": {
        "summary": "Get User Profile",
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "description": "User ID",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User profile retrieved"
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "put": {
        "summary": "Update User Profile",
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "description": "User ID",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/api_profile_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User profile updated"
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "delete": {
        "summary": "Delete User Profile",
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "description": "User ID",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User profile deleted"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/api/dashboard/getTopicRecommendations": {
      "get": {
        "summary": "Get items for a specific topic. The view of the recommended items will be grouped on specific topics News Events ( worldwide , Sports) Music Movies - may include Reels ( short - form videos ) Health and Wellness Technology and Gadgets Lifestyle and Travel Humor and Memes Education and Learning",
        "parameters": [
          {
            "name": "topic",
            "in": "query",
            "description": "Preferred topic for recommendations",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Items for the topic retrieved"
          },
          "404": {
            "description": "Topic not found"
          }
        }
      }
    },
    "/api/dashboard/itemQuickFeedback": {
      "put": {
        "summary": "Clickable action",
        "requestBody": {
          "description": "Boolean if recommended item is good or bad for ML service",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/dashboard_itemQuickFeedback_body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success like sent"
          },
          "404": {
            "description": "Failed accesing BE"
          }
        }
      }
    },
    "/api/feedback": {
      "post": {
        "summary": "Feedback about recommended items",
        "requestBody": {
          "description": "Form questions about recommended items",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/api_feedback_body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success feedback sent"
          },
          "404": {
            "description": "Error contacting the BE"
          }
        }
      }
    },
    "/api/network": {
      "get": {
        "summary": "Network of users",
        "parameters": [
          {
            "name": "network",
            "in": "query",
            "description": "Network of users with common interest",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success network retrieved"
          },
          "404": {
            "description": "Failed retrieving network"
          }
        }
      }
    },
    "/api/network/addUser": {
      "put": {
        "summary": "Add user",
        "parameters": [
          {
            "name": "network",
            "in": "query",
            "description": "Network of users with common interest",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success added user"
          },
          "404": {
            "description": "Faied when adding user"
          }
        }
      }
    },
    "/api/network/removeUser": {
      "delete": {
        "summary": "Remove user",
        "parameters": [
          {
            "name": "network",
            "in": "query",
            "description": "Network of users with common interest",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success removed user"
          },
          "404": {
            "description": "Failed when removing user"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "auth_register_body": {
        "required": [
          "email",
          "password",
          "username"
        ],
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "city": {
            "type": "string"
          }
        }
      },
      "auth_login_body": {
        "required": [
          "password",
          "username"
        ],
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "api_profile_body": {
        "required": [
          "profile"
        ],
        "type": "object",
        "properties": {
          "profile": {
            "type": "object"
          }
        }
      },
      "dashboard_itemQuickFeedback_body": {
        "type": "object",
        "properties": {
          "like": {
            "type": "boolean"
          }
        }
      },
      "api_feedback_body": {
        "type": "object",
        "properties": {
          "question1": {
            "type": "boolean"
          },
          "question2": {
            "type": "boolean"
          },
          "question3": {
            "type": "boolean"
          },
          "questionN": {
            "type": "boolean"
          }
        }
      }
    }
  }
}